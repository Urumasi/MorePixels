local oldPullEvent = os.pullEvent
os.pullEvent = os.pullEventRaw
local arg = {...}
local fs, shell, paintutils, term, os, math, table =
      fs, shell, paintutils, term, os, math, table
local w, h = term.getSize()
if not arg[1] then
  print("Usage: "..shell.getRunningProgram().." filename")
  return
end
if not fs.exists(arg[1]) then
  print("File not found")
  return
end
if fs.isDir(arg[1]) then
  print("Path is a directory")
  return
end 

local function sort(t, fRule)
  local fRule = type(fRule)=="function" and fRule or function(a, b) return a<b end
  local copy = {}
  for k, v in ipairs(t) do copy[k] = v end
  local sorted = {}
  while #copy>0 do
    local besti = 1
    for i=2, #copy do
      if fRule(copy[i], copy[besti]) then
        besti = i
      end
    end
    sorted[#sorted+1] = copy[besti]
    table.remove(copy, besti)
  end
  return sorted
end

os.loadAPI("lib/pix")
local pix = pix
local font = pix.loadFont(arg[1])
local chars = {}
for k in pairs(font) do
  if #k==1 then
    chars[#chars+1] = k
  end
end
chars = sort(chars, function(a,b) return string.byte(a)<string.byte(b) end)
local char = 1
local cx, cy = 0, 0
local scroll = 0
local activeMenu = 0
local inputText, inputNumber = "", 0

local function initGui()
  pix.writeText(36, 6, font, chars[char])
  pix.setAllTextColor(colors.white)
  for i=18+math.floor(cx/2), 24+math.floor(cx/2) do
    for j=2+math.floor(cy/3), 8+math.floor(cy/3) do
      pix.setTextColor(i, j, colors.yellow)
    end
  end
end

local function drawMenu()
  if activeMenu==1 then
    term.setTextColor(colors.black)
    term.setBackgroundColor(colors.lightGray)
    term.setCursorPos(1, 2)
    write("Save      ")
    term.setCursorPos(1, 3)
    write("Save as...")
    term.setCursorPos(1, 4)
    write("Exit      ")
  elseif activeMenu==2 then
    paintutils.drawFilledBox(15, 4, 35, 7, colors.white)
    term.setTextColor(colors.black)
    term.setCursorPos(16, 7)
    write("Ok")
    term.setCursorPos(29, 7)
    write("Cancel")
    paintutils.drawLine(16, 5, 34, 5, colors.lightBlue)
    term.setCursorPos(16, 5)
    if #inputText>18 then
      write(inputText:sub(#inputText-18))
    else
      write(inputText)
    end
  elseif activeMenu==3 then
    term.setTextColor(colors.black)
    term.setBackgroundColor(colors.lightGray)
    term.setCursorPos(6, 2)
    write("New character...")
    term.setCursorPos(6, 3)
    write("Change height...")
    term.setCursorPos(6, 4)
    write("Change width... ")
  elseif activeMenu==4 then
    paintutils.drawFilledBox(15, 4, 35, 9, colors.white)
    term.setTextColor(colors.black)
    term.setCursorPos(16, 5)
    write("Character: ")
    local valid = inputText~="" and not font[inputText]
    if not valid then
      term.setTextColor(colors.red)
    end
    write("'"..inputText.."'")
    term.setTextColor(colors.black)
    term.setCursorPos(16, 7)
    write("Width: ")
    term.setBackgroundColor(colors.lightBlue)
    if inputNumber<10 then write(" ") end
    write(inputNumber)
    term.setBackgroundColor(colors.white)
    write("+-")
    term.setCursorPos(16, 9)
    if not valid then
      term.setTextColor(colors.lightGray)
    end
    write("Ok")
    term.setTextColor(colors.black)
    term.setCursorPos(29, 9)
    write("Cancel")
  elseif activeMenu==5 then
    paintutils.drawFilledBox(15, 4, 35, 7, colors.white)
    term.setTextColor(colors.black)
    term.setCursorPos(16, 5)
    write("Height: ")
    term.setBackgroundColor(colors.lightBlue)
    if inputNumber<10 then write(" ") end
    write(inputNumber)
    term.setBackgroundColor(colors.white)
    write("+-")
    term.setCursorPos(16, 7)
    write("Ok")
    term.setCursorPos(29, 7)
    write("Cancel")
  elseif activeMenu==6 then
    paintutils.drawFilledBox(15, 4, 35, 7, colors.white)
    term.setTextColor(colors.black)
    term.setCursorPos(16, 5)
    write("Width: ")
    term.setBackgroundColor(colors.lightBlue)
    if inputNumber<10 then write(" ") end
    write(inputNumber)
    term.setBackgroundColor(colors.white)
    write("+-")
    term.setCursorPos(16, 7)
    write("Ok")
    term.setCursorPos(29, 7)
    write("Cancel")
  end
end

local function drawGui()
  if activeMenu>0 then
    drawMenu()
    return
  end
  pix.redrawSection(18, 2, w, h)
  term.setTextColor(colors.white)
  term.setBackgroundColor(colors.blue)
  term.setCursorPos(1, 1)
  write("File Font")
  paintutils.drawLine(10, 1, w, 1, colors.blue)
  paintutils.drawLine(4, 2, 4, h, colors.blue)
  paintutils.drawLine(17, 2, 17, h, colors.blue)

  term.setTextColor(colors.gray)
  for y=1, 18 do
    term.setCursorPos(5, y+1)
    for x=1, 12 do
      if x+cx>font[chars[char]].width then
        term.setBackgroundColor(colors.black)
        write("\127")
      else
        if y+cy>font.height then
          term.setBackgroundColor(colors.black)
          write("\127")
        elseif pix.getPixel(35+cx+x, 5+cy+y) then
          term.setBackgroundColor(colors.white)
          write(" ")
        else
          term.setBackgroundColor(colors.black)
          write(" ")
        end
      end
    end
  end

  term.setBackgroundColor(colors.white)
  term.setTextColor(colors.black)
  local c = math.min(#chars, h-1)
  for i=1, c do
    term.setCursorPos(1, i+1)
    if i+scroll==char then
      term.setBackgroundColor(colors.yellow)
      write(" "..chars[i+scroll].." ")
      term.setBackgroundColor(colors.white)
    else
      write(" "..chars[i+scroll].." ")
    end
  end
  term.setBackgroundColor(colors.black)
  term.setTextColor(colors.gray)
  for i=c+1, h-1 do
    term.setCursorPos(1, i+1)
    write("\127\127\127")
  end
end

local function paint(e)
  local c = font[chars[char]]
  local px, py = c.width-e[3]+4-cx, e[4]-2+cy
  if px>=c.width or py>=font.height then return end
  if e[2]==1 then
    c[py+1] = c[py+1]+bit32.band(bit32.bnot(c[py+1]), 2^px)
  elseif e[2]==2 then
    c[py+1] = c[py+1]-bit32.band(c[py+1], 2^px)
    pix.clear()
  end
  initGui()
end

local function saveFile(filename)
  local f = fs.open(filename, "w")
  f.writeLine(tostring(font.height)..";"..tostring(font.space))
  for i=1, #chars do
    local c = font[chars[i]]
    f.write(string.byte(chars[i])..";"..c.width..";")
    for j=1, font.height do
      f.write(c[j]..";")
    end
    f.write("\n")
  end
  f.close()
end

initGui()
while true do
  drawGui()
  term.setBackgroundColor(colors.black)
  local e = {os.pullEvent()}
  if e[1]=="terminate" then
    break
  elseif e[1]=="char" then
    if activeMenu==2 then
      inputText=inputText..e[2]
    elseif activeMenu==4 then
      inputText=e[2]
    end
  elseif e[1]=="key" then
    if activeMenu==2 then
      local c = e[2]
      if c==14 then
        inputText=inputText:sub(1,#inputText-1)
      end
    elseif activeMenu==0 then
      local c = e[2]
      if c==72 then cy=cy-4 end
      if c==80 then cy=cy+4 end
      if c==75 then cx=cx-4 end
      if c==77 then cx=cx+4 end
      if c==200 then cy=cy-1 end
      if c==208 then cy=cy+1 end
      if c==203 then cx=cx-1 end
      if c==205 then cx=cx+1 end
      if cx+11>=font[chars[char]].width then cx=font[chars[char]].width-12 end
      if cy+17>=font.height then cy=font.height-18 end
      if cx<0 then cx=0 end
      if cy<0 then cy=0 end
      initGui()
    end
  elseif e[1]=="mouse_click" then
    if activeMenu==1 then -- 'File' menu
      if e[3]<11 then
        if e[4]==2 then
          saveFile(arg[1])
          activeMenu = 0
        elseif e[4]==3 then
          activeMenu = 2
          inputText = ""
        elseif e[4]==4 then
          break
        else
          activeMenu = 0
        end
      else
        activeMenu = 0
      end
    elseif activeMenu==2 then -- 'Save as'
      if e[3]>15 and e[3]<18 and e[4]==7 then
        saveFile(inputText)
        activeMenu = 0
      elseif e[3]>28 and e[3]<35 and e[4]==7 then
        activeMenu = 0
      end
    elseif activeMenu==3 then -- 'Font' menu
      if e[3]>5 and e[3]<22 then
        if e[4]==2 then
          activeMenu = 4
          inputText = ""
          inputNumber = 1
        elseif e[4]==3 then
          activeMenu = 5
          inputNumber = font.height
        elseif e[4]==4 then
          activeMenu = 6
          inputNumber = font[chars[char]].width
        else
          activeMenu = 0
        end
      else
        activeMenu = 0
      end
    elseif activeMenu==4 then -- 'New character'
      if e[3]>15 and e[3]<18 and e[4]==9 then
        if inputText~="" and not font[inputText] then
          font[inputText] = {width = inputNumber}
          for i=1, font.height do
            font[inputText][i] = 0
          end
          chars[#chars+1] = inputText
          chars = sort(chars, function(a,b) return string.byte(a)<string.byte(b) end)
          for k, v in ipairs(chars) do
            if v==inputText then
              char = k
              break
            end
          end
          cx, cy = 0, 0
          pix.clear()
          initGui()
          activeMenu = 0
        end
      elseif e[3]>28 and e[3]<35 and e[4]==9 then
        activeMenu = 0
      elseif e[3]==25 and e[4]==7 then
        inputNumber = math.min(inputNumber+1, 99)
      elseif e[3]==26 and e[4]==7 then
        inputNumber = math.max(inputNumber-1, 1)
      end
    elseif activeMenu==5 then -- 'Change height'
      if e[3]>15 and e[3]<18 and e[4]==7 then
        local diff = inputNumber-font.height
        if diff~=0 then
          for k, v in pairs(font) do
            if #k==1 then
              if diff>0 then
                for i=1, diff do
                  v[#v+1] = 0
                end
              else
                for i=1, -diff do
                  v[#v] = nil
                end
              end
            end
          end
        end
        font.height = inputNumber
        activeMenu = 0
      elseif e[3]>28 and e[3]<35 and e[4]==7 then
        activeMenu = 0
      elseif e[3]==26 and e[4]==5 then
        inputNumber = math.min(inputNumber+1, 99)
      elseif e[3]==27 and e[4]==5 then
        inputNumber = math.max(inputNumber-1, 1)
      end
    elseif activeMenu==6 then -- 'Change width'
      if e[3]>15 and e[3]<18 and e[4]==7 then
        local c = font[chars[char]]
        local diff = inputNumber-c.width
        if diff~=0 then
          for k, v in ipairs(c) do
            if diff>0 then
              c[k] = bit32.lshift(v, diff)
            else
              c[k] = bit32.rshift(v, -diff)
            end
          end
        end
        c.width = inputNumber
        activeMenu = 0
      elseif e[3]>28 and e[3]<35 and e[4]==7 then
        activeMenu = 0
      elseif e[3]==25 and e[4]==5 then
        inputNumber = math.min(inputNumber+1, 99)
      elseif e[3]==26 and e[4]==5 then
        inputNumber = math.max(inputNumber-1, 1)
      end
    elseif e[4]==1 then
      if e[3]<5 then
        activeMenu = 1
      elseif e[3]>5 and e[3]<10 then
        activeMenu = 3
      end
    elseif e[3]<4 then
      if e[4]-2+scroll<=#chars then
        char = e[4]-1+scroll
        cx, cy = 0, 0
        pix.clear()
        initGui()
      end
    elseif e[3]>4 and e[3]<17 then
      paint(e)
    end
  elseif e[1]=="mouse_drag" then
    if e[4]>1 and e[3]>4 and e[3]<17 then
      paint(e)
    end
  elseif e[1]=="mouse_scroll" then
    scroll = math.min(math.max(scroll+e[2], 0), #chars-18)
  end
end
term.clear()
term.setBackgroundColor(colors.black)
term.setTextColor(colors.white)
term.setCursorPos(1, 1)
os.pullEvent = oldPullEvent -- 420 lines
